name: Build OTel Collector Multi-Arch Image

on:
  workflow_dispatch:
    inputs:
      otel_version:
        description: 'OpenTelemetry Collector OSS version (e.g., 0.115.0)'
        required: true
        type: string
      registry:
        description: 'Container registry to push to'
        required: false
        default: 'ghcr.io/nirmata'
        type: string
      push:
        description: 'Push image to registry'
        required: false
        default: true
        type: boolean

env:
  REGISTRY: ${{ inputs.registry || 'ghcr.io/nirmata' }}
  IMAGE_NAME: otel-collector

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate input version
        run: |
          if [[ ! "${{ inputs.otel_version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must be in format X.Y.Z (e.g., 0.115.0)"
            exit 1
          fi
          echo "OTEL_VERSION=${{ inputs.otel_version }}" >> $GITHUB_ENV
          echo "NIRMATA_TAG=nirmata-${{ inputs.otel_version }}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: ${{ inputs.push }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.NIRMATA_TAG }}
            type=raw,value=latest
          labels: |
            org.opencontainers.image.title=Nirmata OpenTelemetry Collector
            org.opencontainers.image.description=Multi-arch OpenTelemetry Collector based on version ${{ env.OTEL_VERSION }}
            org.opencontainers.image.version=${{ env.NIRMATA_TAG }}
            org.opencontainers.image.source=https://github.com/open-telemetry/opentelemetry-collector
            nirmata.version=${{ env.OTEL_VERSION }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            OTEL_VERSION=${{ env.OTEL_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate image summary
        run: |
          echo "## 🚀 Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "**OpenTelemetry Collector Version:** ${{ env.OTEL_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "**Nirmata Tag:** ${{ env.NIRMATA_TAG }}" >> $GITHUB_STEP_SUMMARY
          echo "**Registry:** ${{ env.REGISTRY }}" >> $GITHUB_STEP_SUMMARY
          echo "**Platforms:** linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.NIRMATA_TAG }}\`" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ inputs.push }}" == "true" ]]; then
            echo "**Status:** ✅ Pushed to registry" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Pull Command" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
            echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.NIRMATA_TAG }}" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Status:** 🏗️ Built only (not pushed)" >> $GITHUB_STEP_SUMMARY
          fi 